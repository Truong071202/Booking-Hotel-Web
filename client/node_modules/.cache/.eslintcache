[{"E:\\ReactProject\\web-travel-be\\client\\src\\index.js":"1","E:\\ReactProject\\web-travel-be\\client\\src\\App.js":"2","E:\\ReactProject\\web-travel-be\\client\\src\\pages\\list\\List.jsx":"3","E:\\ReactProject\\web-travel-be\\client\\src\\pages\\home\\Home.jsx":"4","E:\\ReactProject\\web-travel-be\\client\\src\\pages\\hotel\\Hotel.jsx":"5","E:\\ReactProject\\web-travel-be\\client\\src\\components\\navbar\\Navbar.jsx":"6","E:\\ReactProject\\web-travel-be\\client\\src\\components\\featured\\Featured.jsx":"7","E:\\ReactProject\\web-travel-be\\client\\src\\components\\header\\Header.jsx":"8","E:\\ReactProject\\web-travel-be\\client\\src\\components\\searchItem\\SearchItem.jsx":"9","E:\\ReactProject\\web-travel-be\\client\\src\\components\\footer\\Footer.jsx":"10","E:\\ReactProject\\web-travel-be\\client\\src\\components\\featuredProperties\\FeaturedProperties.jsx":"11","E:\\ReactProject\\web-travel-be\\client\\src\\components\\mailList\\MailList.jsx":"12","E:\\ReactProject\\web-travel-be\\client\\src\\components\\propertyList\\PropertyList.jsx":"13","E:\\ReactProject\\web-travel-be\\client\\src\\hooks\\useFetch.js":"14","E:\\ReactProject\\web-travel-be\\client\\src\\context\\SearchContext.js":"15","E:\\ReactProject\\web-travel-be\\client\\src\\context\\AuthContext.js":"16","E:\\ReactProject\\web-travel-be\\client\\src\\pages\\login\\Login.jsx":"17","E:\\ReactProject\\web-travel-be\\client\\src\\components\\reserve\\Reserve.jsx":"18","E:\\ReactProject\\web-travel-be\\client\\src\\pages\\register\\Register.jsx":"19","E:\\ReactProject\\web-travel-be\\client\\src\\components\\review\\Review.jsx":"20","E:\\ReactProject\\web-travel-be\\client\\src\\pages\\information\\Information.jsx":"21","E:\\ReactProject\\web-travel-be\\client\\src\\pages\\checkout\\Checkout.jsx":"22","E:\\ReactProject\\web-travel-be\\client\\src\\components\\errorboundary\\ErrorBoundary.js":"23"},{"size":492,"mtime":1711336813054,"results":"24","hashOfConfig":"25"},{"size":1281,"mtime":1712543413029,"results":"26","hashOfConfig":"25"},{"size":7427,"mtime":1713936025692,"results":"27","hashOfConfig":"25"},{"size":900,"mtime":1716023607807,"results":"28","hashOfConfig":"25"},{"size":7694,"mtime":1716136027808,"results":"29","hashOfConfig":"25"},{"size":1436,"mtime":1713238870927,"results":"30","hashOfConfig":"25"},{"size":1691,"mtime":1713936028405,"results":"31","hashOfConfig":"25"},{"size":9701,"mtime":1713862001236,"results":"32","hashOfConfig":"25"},{"size":2022,"mtime":1712386943908,"results":"33","hashOfConfig":"25"},{"size":1263,"mtime":1716024087073,"results":"34","hashOfConfig":"25"},{"size":988,"mtime":1712581296053,"results":"35","hashOfConfig":"25"},{"size":1687,"mtime":1713754542842,"results":"36","hashOfConfig":"25"},{"size":1465,"mtime":1712462335365,"results":"37","hashOfConfig":"25"},{"size":828,"mtime":1711678919502,"results":"38","hashOfConfig":"25"},{"size":869,"mtime":1711332302620,"results":"39","hashOfConfig":"25"},{"size":2420,"mtime":1713238764697,"results":"40","hashOfConfig":"25"},{"size":2735,"mtime":1713235187146,"results":"41","hashOfConfig":"25"},{"size":3996,"mtime":1714034576023,"results":"42","hashOfConfig":"25"},{"size":3863,"mtime":1713274607012,"results":"43","hashOfConfig":"25"},{"size":6805,"mtime":1713885285716,"results":"44","hashOfConfig":"25"},{"size":3170,"mtime":1713585886575,"results":"45","hashOfConfig":"25"},{"size":4918,"mtime":1713586229466,"results":"46","hashOfConfig":"25"},{"size":805,"mtime":1712327778449,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"1ha53xj",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\ReactProject\\web-travel-be\\client\\src\\index.js",[],[],[],"E:\\ReactProject\\web-travel-be\\client\\src\\App.js",[],[],"E:\\ReactProject\\web-travel-be\\client\\src\\pages\\list\\List.jsx",["129"],[],"import \"./list.css\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\nimport Header from \"../../components/header/Header\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { format } from \"date-fns\";\r\nimport { DateRange } from \"react-date-range\";\r\nimport SearchItem from \"../../components/searchItem/SearchItem.jsx\";\r\nimport useFetch from \"../../hooks/useFetch.js\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst List = () => {\r\n  const location = useLocation();\r\n  const [destination, setDestination] = useState(location.state.destination);\r\n  const [dates, setDates] = useState(location.state.dates);\r\n  const [openDate, setOpenDate] = useState(false);\r\n  const [options, setOptions] = useState(location.state.options);\r\n  const [min, setMin] = useState(undefined);\r\n  const [max, setMax] = useState(undefined);\r\n  const [suggestions, setSuggestions] = useState([]); // Danh sách gợi ý\r\n\r\n  const { data, loading, error, reFetch } = useFetch(\r\n    `/hotels?city=${destination}&min=${min || 0}&max=${max || 999}`\r\n  );\r\n  const [showSuggestions, setShowSuggestions] = useState(false); // Đã thêm khởi tạo cho showSuggestions\r\n\r\n  useEffect(() => {\r\n    // Lọc danh sách gợi ý dựa trên giá trị nhập vào của người dùng\r\n    const filteredSuggestions = [\"Đà Nẵng\", \"Hội An\", \"Huế\"].filter((city) =>\r\n      city.toLowerCase().includes(destination.toLowerCase())\r\n    );\r\n    setSuggestions(filteredSuggestions);\r\n  }, [destination]);\r\n\r\n  const handleClick = () => {\r\n    reFetch();\r\n  };\r\n  const handleGoBack = () => {\r\n    window.history.back();\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const newValue = e.target.value;\r\n    setDestination(newValue);\r\n\r\n    // Hiển thị danh sách gợi ý nếu ô input không rỗng\r\n    if (newValue.trim() !== \"\") {\r\n      setShowSuggestions(true);\r\n    } else {\r\n      setShowSuggestions(false);\r\n    }\r\n  };\r\n\r\n  const handleSuggestionClick = (suggestion) => {\r\n    setDestination(suggestion);\r\n    // Xóa danh sách gợi ý sau khi chọn\r\n    setSuggestions([]);\r\n    setShowSuggestions(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Header type=\"list\" />\r\n      <div className=\"backButton\" onClick={handleGoBack}>\r\n        <FontAwesomeIcon\r\n          icon={faCircleArrowLeft}\r\n          style={{ marginRight: \"5px\" }}\r\n        />\r\n        <span>Quay lại trang trước</span>\r\n      </div>\r\n      <div className=\"listContainer\">\r\n        <div className=\"listWrapper\">\r\n          <div className=\"listSearch\">\r\n            <h1 className=\"lsTitle\">Tìm kiếm</h1>\r\n            <div className=\"lsItem\">\r\n              <label>Điểm đến</label>\r\n              <input\r\n                placeholder=\"Nhập điểm đến\"\r\n                type=\"text\"\r\n                value={destination}\r\n                onChange={handleInputChange}\r\n              />\r\n              {/* Hiển thị gợi ý nếu có và ô input không rỗng */}\r\n              {showSuggestions && suggestions.length > 0 && (\r\n                <ul className=\"suggestion\">\r\n                  {suggestions.map((suggestion, index) => (\r\n                    <li\r\n                      key={index}\r\n                      onClick={() => handleSuggestionClick(suggestion)}\r\n                    >\r\n                      {suggestion}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              )}\r\n            </div>\r\n            <div className=\"lsItem\">\r\n              <label>Ngày check-in</label>\r\n              <span onClick={() => setOpenDate(!openDate)}>{`${format(\r\n                dates[0].startDate,\r\n                \"MM/dd/yyyy\"\r\n              )} to ${format(dates[0].endDate, \"MM/dd/yyyy\")}`}</span>\r\n              {openDate && (\r\n                <DateRange\r\n                  onChange={(item) => setDates([item.selection])}\r\n                  minDate={new Date()}\r\n                  ranges={dates}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"lsItem\">\r\n              <label>Lọc theo</label>\r\n              <div className=\"lsOptions\">\r\n                <div className=\"lsOptionItem\">\r\n                  <span className=\"lsOptionText\">\r\n                    Giá thấp nhất <small>một đêm</small>\r\n                  </span>\r\n                  <input\r\n                    type=\"number\"\r\n                    min={1}\r\n                    onChange={(e) => setMin(e.target.value)}\r\n                    className=\"lsOptionInput\"\r\n                  />\r\n                </div>\r\n                <div className=\"lsOptionItem\">\r\n                  <span className=\"lsOptionText\">\r\n                    Giá cao nhất <small>một đêm</small>\r\n                  </span>\r\n                  <input\r\n                    type=\"number\"\r\n                    min={1}\r\n                    onChange={(e) => setMax(e.target.value)}\r\n                    className=\"lsOptionInput\"\r\n                  />\r\n                </div>\r\n                <div className=\"lsOptionItem\">\r\n                  <span className=\"lsOptionText\">Người lớn</span>\r\n                  <input\r\n                    type=\"number\"\r\n                    min={1}\r\n                    max={40}\r\n                    className=\"lsOptionInput\"\r\n                    placeholder={Math.min(40, options.adult)}\r\n                    title=\"Số lượng người lớn tối đa là 40!\"\r\n                    onChange={(e) =>\r\n                      setOptions({ ...options, adult: e.target.value })\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className=\"lsOptionItem\">\r\n                  <span className=\"lsOptionText\">Trẻ em</span>\r\n                  <input\r\n                    type=\"number\"\r\n                    min={0}\r\n                    max={15}\r\n                    className=\"lsOptionInput\"\r\n                    placeholder={Math.min(15, options.children)}\r\n                    title=\"Số lượng trẻ em tối đa là 15!\"\r\n                    onChange={(e) =>\r\n                      setOptions({ ...options, children: e.target.value })\r\n                    }\r\n                  />\r\n                </div>\r\n                <div className=\"lsOptionItem\">\r\n                  <span className=\"lsOptionText\">Phòng</span>\r\n                  <input\r\n                    type=\"number\"\r\n                    min={1}\r\n                    max={30}\r\n                    className=\"lsOptionInput\"\r\n                    placeholder={Math.min(30, options.room)}\r\n                    title=\"Số lượng phòng tối đa là 30!\"\r\n                    onChange={(e) =>\r\n                      setOptions({ ...options, room: e.target.value })\r\n                    }\r\n                  />\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <button onClick={handleClick}>Tìm kiếm</button>\r\n          </div>\r\n          <div className=\"listResult\">\r\n            {loading ? (\r\n              \"loading\"\r\n            ) : (\r\n              <>\r\n                {data.map((item) => (\r\n                  <SearchItem item={item} key={item._id} />\r\n                ))}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","E:\\ReactProject\\web-travel-be\\client\\src\\pages\\home\\Home.jsx",[],[],"E:\\ReactProject\\web-travel-be\\client\\src\\pages\\hotel\\Hotel.jsx",["130","131"],[],"E:\\ReactProject\\web-travel-be\\client\\src\\components\\navbar\\Navbar.jsx",["132"],[],"import { useContext } from \"react\";\r\nimport \"./navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nconst Navbar = () => {\r\n  const { user, dispatch, logout } = useContext(AuthContext);\r\n\r\n  const handleLogout = () => {\r\n    logout();\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"navContainer\">\r\n        <Link to=\"/\" style={{ color: \"inherit\", textDecoration: \"none\" }}>\r\n          <span className=\"logo\">HotelBooking</span>\r\n        </Link>\r\n        {user ? (\r\n          <div className=\"navItems\">\r\n            <span>{user.username}</span>\r\n            <button className=\"navButton\" onClick={handleLogout}>\r\n              Đăng xuất\r\n            </button>\r\n            <Link to=\"/login\" style={{ display: \"none\" }}>\r\n              Đăng nhập\r\n            </Link>\r\n          </div>\r\n        ) : (\r\n          <div className=\"navItems\">\r\n            <button className=\"navButton\">\r\n              <Link style={{ textDecoration: \"none\" }} to=\"/register\">\r\n                Đăng ký\r\n              </Link>\r\n            </button>\r\n            <button className=\"navButton\" style={{ marginLeft: \"20px\" }}>\r\n              <Link to=\"/login\" style={{ textDecoration: \"none\" }}>\r\n                Đăng nhập\r\n              </Link>\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","E:\\ReactProject\\web-travel-be\\client\\src\\components\\featured\\Featured.jsx",["133"],[],"import useFetch from \"../../hooks/useFetch\";\r\nimport \"./featured.css\";\r\n\r\nconst Featured = () => {\r\n  const { data, loading, error } = useFetch(\r\n    \"/hotels/countByCity?cities=Đà Nẵng,Hội An,Huế\"\r\n  );\r\n\r\n  return (\r\n    <div className=\"featured\">\r\n      {loading ? (\r\n        \"Loading please wait\"\r\n      ) : (\r\n        <>\r\n          {\" \"}\r\n          <div className=\"featuredItem\">\r\n            <img\r\n              src=\"https://static-images.vnncdn.net/files/publish/2023/11/7/at-ve-dep-thanh-pho-da-nang-giu-tron-tung-khoanh-khac-6b555585df3ca96d931cf6f4378c9488-1276.jpg\"\r\n              alt=\"\"\r\n              className=\"featuredImg\"\r\n            />\r\n            <div className=\"featuredTitles\">\r\n              <h1>Đà Nẵng</h1>\r\n              <h2>{data[0]} địa điểm</h2>\r\n            </div>\r\n          </div>\r\n          <div className=\"featuredItem\">\r\n            <img\r\n              src=\"https://sakos.vn/wp-content/uploads/2023/04/image_tiz1614827333-1.jpg\"\r\n              alt=\"\"\r\n              className=\"featuredImg\"\r\n            />\r\n            <div className=\"featuredTitles\">\r\n              <h1>Hội An</h1>\r\n              <h2>{data[1]} địa điểm</h2>\r\n            </div>\r\n          </div>\r\n          <div className=\"featuredItem\">\r\n            <img\r\n              src=\"https://dulichconvoi.com/wp-content/uploads/2019/04/hinh-anh-hue-1.jpg\"\r\n              alt=\"\"\r\n              className=\"featuredImg\"\r\n            />\r\n            <div className=\"featuredTitles\">\r\n              <h1>Huế</h1>\r\n              <h2>{data[2]} địa điểm</h2>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Featured;\r\n","E:\\ReactProject\\web-travel-be\\client\\src\\components\\header\\Header.jsx",["134","135","136","137"],[],"import {\r\n  faBed,\r\n  faCalendarDays,\r\n  faCar,\r\n  faHouse,\r\n  faPerson,\r\n  faPlane,\r\n  faTaxi,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"./header.css\";\r\nimport { DateRange } from \"react-date-range\";\r\nimport { useContext, useState, useRef } from \"react\"; // Thêm useRef vào để tham chiếu đến DateRange\r\nimport \"react-date-range/dist/styles.css\"; // main css file\r\nimport \"react-date-range/dist/theme/default.css\"; // theme css file\r\nimport { format } from \"date-fns\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { SearchContext } from \"../../context/SearchContext\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nconst Header = ({ type }) => {\r\n  const [destination, setDestination] = useState(\"\");\r\n  const [openDate, setOpenDate] = useState(false);\r\n  const [dates, setDates] = useState([\r\n    {\r\n      startDate: new Date(),\r\n      endDate: new Date(),\r\n      key: \"selection\",\r\n    },\r\n  ]);\r\n  const [openOptions, setOpenOptions] = useState(false);\r\n  const [options, setOptions] = useState({\r\n    adult: 1,\r\n    children: 0,\r\n    room: 1,\r\n  });\r\n  const [suggestions, setSuggestions] = useState([]); // State để lưu trữ danh sách gợi ý\r\n  const [showSuggestions, setShowSuggestions] = useState(false); // State để điều khiển hiển thị gợi ý\r\n\r\n  const navigate = useNavigate();\r\n  const { user } = useContext(AuthContext);\r\n  const dateRangeRef = useRef(); // Tham chiếu đến DateRange\r\n\r\n  const handleOption = (name, operation) => {\r\n    setOptions((prev) => {\r\n      return {\r\n        ...prev,\r\n        [name]: operation === \"i\" ? options[name] + 1 : options[name] - 1,\r\n      };\r\n    });\r\n  };\r\n\r\n  const { dispatch } = useContext(SearchContext);\r\n\r\n  const handleSearch = () => {\r\n    if (!destination.trim()) {\r\n      alert(\"Vui lòng nhập địa điểm trước khi tìm kiếm!\");\r\n      return;\r\n    }\r\n\r\n    dispatch({\r\n      type: \"NEW_SEARCH\",\r\n      payload: { destination, dates, options },\r\n    });\r\n    navigate(\"/hotels\", { state: { destination, dates, options } });\r\n  };\r\n\r\n  // Hàm để xử lý sự kiện khi người dùng nhập vào trường input\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    setDestination(value);\r\n\r\n    // Tìm kiếm và hiển thị gợi ý dựa trên giá trị nhập vào\r\n    const suggestions = [\"Đà Nẵng\", \"Hội An\", \"Huế\"].filter((city) =>\r\n      city.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n    setSuggestions(suggestions);\r\n\r\n    // Hiển thị hoặc ẩn gợi ý\r\n    setShowSuggestions(true);\r\n  };\r\n\r\n  // Hàm để chọn một gợi ý và điền vào trường input\r\n  const handleSuggestionClick = (suggestion) => {\r\n    setDestination(suggestion);\r\n    setShowSuggestions(false);\r\n  };\r\n\r\n  // Đóng DateRange khi click vào options\r\n  const handleCloseDateRange = () => {\r\n    setOpenDate(false);\r\n  };\r\n\r\n  const handleCloseOptions = () => {\r\n    setOpenOptions(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div\r\n        className={\r\n          type === \"list\" ? \"headerContainer listMode\" : \"headerContainer\"\r\n        }\r\n      >\r\n        <div className=\"headerList\">\r\n          <div className=\"headerListItem\">\r\n            <FontAwesomeIcon icon={faHouse} />\r\n            <span>\r\n              <Link to=\"/\" style={{ color: \"unset\", textDecoration: \"none\" }}>\r\n                Trang chủ\r\n              </Link>\r\n            </span>\r\n          </div>\r\n        </div>\r\n        {type !== \"list\" && (\r\n          <>\r\n            <h1 className=\"headerTitle\">Đăng nhập để tiết kiệm</h1>\r\n            <p className=\"headerDesc\">\r\n              Nhận phần thưởng cho chuyến du lịch của bạn - tiết kiệm ngay lập\r\n              tức từ 10% trở lên với tài khoản HotelBooking miễn phí\r\n            </p>\r\n\r\n            <div className=\"headerSearch\">\r\n              <div className=\"headerSearchItem\">\r\n                <FontAwesomeIcon icon={faBed} className=\"headerIcon\" />\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Bạn đang ở đâu?\"\r\n                  className=\"headerSearchInput\"\r\n                  value={destination}\r\n                  onChange={handleInputChange}\r\n                />\r\n                {showSuggestions && (\r\n                  <ul className=\"suggestions\">\r\n                    {suggestions.map((suggestion, index) => (\r\n                      <li\r\n                        key={index}\r\n                        onClick={() => handleSuggestionClick(suggestion)}\r\n                      >\r\n                        {suggestion}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                )}\r\n              </div>\r\n              <div className=\"headerSearchItem\" onClick={handleCloseOptions}>\r\n                <FontAwesomeIcon icon={faCalendarDays} className=\"headerIcon\" />\r\n                <span\r\n                  onClick={() => setOpenDate(!openDate)}\r\n                  className=\"headerSearchText\"\r\n                >{`${format(dates[0].startDate, \"MM/dd/yyyy\")} to ${format(\r\n                  dates[0].endDate,\r\n                  \"MM/dd/yyyy\"\r\n                )}`}</span>\r\n                {openDate && (\r\n                  <DateRange\r\n                    ref={dateRangeRef} // Tham chiếu DateRange\r\n                    editableDateInputs={true}\r\n                    onChange={(item) => setDates([item.selection])}\r\n                    moveRangeOnFirstSelection={false}\r\n                    ranges={dates}\r\n                    className=\"date\"\r\n                    minDate={new Date()}\r\n                  />\r\n                )}\r\n              </div>\r\n              <div className=\"headerSearchItem\" onClick={handleCloseDateRange}>\r\n                <FontAwesomeIcon icon={faPerson} className=\"headerIcon\" />\r\n                <span\r\n                  onClick={() => setOpenOptions(!openOptions)}\r\n                  className=\"headerSearchText\"\r\n                >{`${Math.min(40, options.adult)} người lớn · ${Math.min(\r\n                  15,\r\n                  options.children\r\n                )} trẻ em · ${Math.min(30, options.room)} phòng`}</span>\r\n                {openOptions && (\r\n                  <div className=\"options\">\r\n                    {\" \"}\r\n                    {/* Thêm event onClick */}\r\n                    <div className=\"optionItem\">\r\n                      <span className=\"optionText\">Người lớn</span>\r\n                      <div className=\"optionCounter\">\r\n                        <button\r\n                          disabled={options.adult <= 1}\r\n                          className=\"optionCounterButton\"\r\n                          onClick={() => handleOption(\"adult\", \"d\")}\r\n                        >\r\n                          -\r\n                        </button>\r\n                        <span className=\"optionCounterNumber\">\r\n                          {Math.min(40, options.adult)}\r\n                        </span>\r\n                        <button\r\n                          className=\"optionCounterButton\"\r\n                          onClick={() => handleOption(\"adult\", \"i\")}\r\n                        >\r\n                          +\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"optionItem\">\r\n                      <span className=\"optionText\">Trẻ em</span>\r\n                      <div className=\"optionCounter\">\r\n                        <button\r\n                          disabled={options.children <= 0}\r\n                          className=\"optionCounterButton\"\r\n                          onClick={() => handleOption(\"children\", \"d\")}\r\n                        >\r\n                          -\r\n                        </button>\r\n                        <span className=\"optionCounterNumber\">\r\n                          {Math.min(15, options.children)}\r\n                        </span>\r\n                        <button\r\n                          className=\"optionCounterButton\"\r\n                          onClick={() => handleOption(\"children\", \"i\")}\r\n                        >\r\n                          +\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"optionItem\">\r\n                      <span className=\"optionText\">Phòng</span>\r\n                      <div className=\"optionCounter\">\r\n                        <button\r\n                          disabled={options.room <= 1}\r\n                          className=\"optionCounterButton\"\r\n                          onClick={() => handleOption(\"room\", \"d\")}\r\n                        >\r\n                          -\r\n                        </button>\r\n                        <span className=\"optionCounterNumber\">\r\n                          {Math.min(30, options.room)}\r\n                        </span>\r\n                        <button\r\n                          className=\"optionCounterButton\"\r\n                          onClick={() => handleOption(\"room\", \"i\")}\r\n                        >\r\n                          +\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"headerSearchItem\">\r\n                <button className=\"headerBtn\" onClick={handleSearch}>\r\n                  Tìm kiếm\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","E:\\ReactProject\\web-travel-be\\client\\src\\components\\searchItem\\SearchItem.jsx",[],[],"E:\\ReactProject\\web-travel-be\\client\\src\\components\\footer\\Footer.jsx",[],[],"E:\\ReactProject\\web-travel-be\\client\\src\\components\\featuredProperties\\FeaturedProperties.jsx",["138"],[],"import useFetch from \"../../hooks/useFetch\";\r\nimport \"./featuredProperties.css\";\r\n\r\nconst FeaturedProperties = () => {\r\n  const { data, loading, error } = useFetch(\"/hotels?featured=true\");\r\n\r\n  return (\r\n    <div className=\"fp\">\r\n      {loading ? (\r\n        \"Loading\"\r\n      ) : (\r\n        <>\r\n          {data.map((item) => (\r\n            <div className=\"fpItem\" key={item._id}>\r\n              <img src={item.photos[0]} alt=\"\" className=\"fpImg\" />\r\n              <span className=\"fpName\">{item.name}</span>\r\n              <span className=\"fpCity\">{item.city}</span>\r\n              <span className=\"fpPrice\">Giá chỉ từ ${item.cheapestPrice}</span>\r\n              {item.rating && (\r\n                <div className=\"fpRating\">\r\n                  <button>{item.rating}</button>\r\n                  <span>Tuyệt vời!</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeaturedProperties;\r\n","E:\\ReactProject\\web-travel-be\\client\\src\\components\\mailList\\MailList.jsx",[],[],"E:\\ReactProject\\web-travel-be\\client\\src\\components\\propertyList\\PropertyList.jsx",["139"],[],"import useFetch from \"../../hooks/useFetch\";\r\nimport \"./propertyList.css\";\r\n\r\nconst PropertyList = () => {\r\n  const { data, loading, error } = useFetch(\"/hotels/countByType\");\r\n\r\n  const images = [\r\n    \"https://cf.bstatic.com/xdata/images/xphoto/square300/57584488.webp?k=bf724e4e9b9b75480bbe7fc675460a089ba6414fe4693b83ea3fdd8e938832a6&o=\",\r\n    \"https://cf.bstatic.com/static/img/theme-index/carousel_320x240/card-image-apartments_300/9f60235dc09a3ac3f0a93adbc901c61ecd1ce72e.jpg\",\r\n    \"https://cf.bstatic.com/static/img/theme-index/carousel_320x240/bg_resorts/6f87c6143fbd51a0bb5d15ca3b9cf84211ab0884.jpg\",\r\n    \"https://quantrinhahang.edu.vn/wp-content/uploads/2019/04/villa-thiet-ke-hien-dai-voi-khong-gian-tach-biet.jpg\",\r\n    \"https://dynamic-media-cdn.tripadvisor.com/media/photo-o/1d/f6/29/4b/rocky-mountain-escape.jpg?w=700&h=-1&s=1\",\r\n  ];\r\n  return (\r\n    <div className=\"pList\">\r\n      {loading ? (\r\n        \"loading\"\r\n      ) : (\r\n        <>\r\n          {data &&\r\n            images.map((img, i) => (\r\n              <div className=\"pListItem\" key={i}>\r\n                <img src={img} alt=\"\" className=\"pListImg\" />\r\n                <div className=\"pListTitles\">\r\n                  <h1>{data[i]?.type}</h1>\r\n                  <h2>\r\n                    {data[i]?.count} {data[i]?.type}\r\n                  </h2>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PropertyList;\r\n","E:\\ReactProject\\web-travel-be\\client\\src\\hooks\\useFetch.js",[],[],"E:\\ReactProject\\web-travel-be\\client\\src\\context\\SearchContext.js",[],[],"E:\\ReactProject\\web-travel-be\\client\\src\\context\\AuthContext.js",[],[],"E:\\ReactProject\\web-travel-be\\client\\src\\pages\\login\\Login.jsx",["140","141"],[],"import { useContext, useState } from \"react\";\r\nimport \"./login.css\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport axios from \"axios\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport Navbar from \"../../components/navbar/Navbar\";\r\n\r\nconst Login = () => {\r\n  const [credentials, setCredentials] = useState({\r\n    username: undefined,\r\n    password: undefined,\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false); // State for password visibility\r\n\r\n  const { loading, error, dispatch, login } = useContext(AuthContext);\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const handleChange = (e) => {\r\n    setCredentials((prev) => ({ ...prev, [e.target.id]: e.target.value }));\r\n  };\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword(!showPassword); // Toggle password visibility\r\n  };\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    const res = await login(credentials);\r\n    if (res) {\r\n      navigate((location.state && location.state.from) || \"/\"); // Quay lại đường dẫn trước đó hoặc trang chính\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"login-page\">\r\n        <div className=\"login\">\r\n          <div className=\"lContainer\">\r\n            <div className=\"lHeader\">Đăng nhập</div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Tên tài khoản\"\r\n              id=\"username\"\r\n              onChange={handleChange}\r\n              className=\"lInput\"\r\n              required\r\n            />\r\n            <input\r\n              type={showPassword ? \"text\" : \"password\"} // Toggle input type\r\n              placeholder=\"Mật khẩu\"\r\n              id=\"password\"\r\n              onChange={handleChange}\r\n              className=\"lInput\"\r\n              required\r\n            />\r\n            <div className=\"show-password-container\">\r\n              <input\r\n                style={{ height: \"20px\" }}\r\n                type=\"checkbox\"\r\n                id=\"showPassword\"\r\n                checked={showPassword} // Set checkbox state\r\n                onChange={handleShowPassword}\r\n              />\r\n              <label htmlFor=\"showPassword\">Hiển thị mật khẩu</label>\r\n            </div>\r\n            <button\r\n              disabled={loading}\r\n              onClick={handleClick}\r\n              className=\"lButton\"\r\n            >\r\n              Đăng nhập\r\n            </button>\r\n            {error && (\r\n              <span style={{ color: \"red\", textAlign: \"center\" }}>\r\n                {error.message}\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","E:\\ReactProject\\web-travel-be\\client\\src\\components\\reserve\\Reserve.jsx",["142","143","144","145","146"],[],"import React, { useState, useEffect } from \"react\";\r\nimport \"./reserve.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { useContext } from \"react\";\r\nimport { SearchContext } from \"../../context/SearchContext\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Reserve = ({ setOpen, hotelId }) => {\r\n  const [selectedRooms, setSelectedRooms] = useState({});\r\n  const { data, loading, error } = useFetch(`/hotels/room/${hotelId}`);\r\n  const { dates } = useContext(SearchContext);\r\n  const [showMessage, setShowMessage] = useState(false);\r\n\r\n  const getDatesInRange = (startDate, endDate) => {\r\n    const start = new Date(startDate);\r\n    const end = new Date(endDate);\r\n\r\n    const date = new Date(start.getTime());\r\n\r\n    const dates = [];\r\n\r\n    while (date <= end) {\r\n      dates.push(new Date(date).getTime());\r\n      date.setDate(date.getDate() + 1);\r\n    }\r\n\r\n    return dates;\r\n  };\r\n\r\n  const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\r\n\r\n  const isAvailable = (roomNumber) => {\r\n    const isFound = roomNumber.unavailableDates.some((date) =>\r\n      alldates.includes(new Date(date).getTime())\r\n    );\r\n\r\n    return !isFound;\r\n  };\r\n\r\n  const handleSelect = (e, roomId) => {\r\n    const checked = e.target.checked;\r\n    setSelectedRooms((prevSelectedRooms) => ({\r\n      ...prevSelectedRooms,\r\n      [roomId]: checked ? 1 : 0,\r\n    }));\r\n  };\r\n\r\n  const handleQuantityChange = (roomId, change) => {\r\n    setSelectedRooms((prevSelectedRooms) => ({\r\n      ...prevSelectedRooms,\r\n      [roomId]: Math.max((prevSelectedRooms[roomId] || 0) + change, 0),\r\n    }));\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = async () => {\r\n    const selectedRoomIds = Object.keys(selectedRooms).filter(\r\n      (roomId) => selectedRooms[roomId] > 0\r\n    );\r\n\r\n    if (selectedRoomIds.length > 0) {\r\n      try {\r\n        await Promise.all(\r\n          selectedRoomIds.map((roomId) => {\r\n            const res = axios.put(`/rooms/availability/${roomId}`, {\r\n              dates: alldates,\r\n            });\r\n            return res.data;\r\n          })\r\n        );\r\n        setOpen(false);\r\n        navigate(\"/information\");\r\n      } catch (err) {}\r\n    } else {\r\n      setShowMessage(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reserve\">\r\n      <div className=\"rContainer\">\r\n        <FontAwesomeIcon\r\n          icon={faCircleXmark}\r\n          className=\"rClose\"\r\n          onClick={() => setOpen(false)}\r\n        />\r\n        <span>Chọn loại phòng:</span>\r\n        {data.map((item) => (\r\n          <div className=\"rItem\" key={item._id}>\r\n            <div className=\"rItemInfo\">\r\n              <div className=\"rTitle\">{item.title}</div>\r\n              <div className=\"rDesc\">{item.desc}</div>\r\n              <div className=\"rMax\">\r\n                Số người tối đa: <b>{item.maxPeople}</b>\r\n              </div>\r\n              <div className=\"rPrice\">{item.price}</div>\r\n            </div>\r\n            <div className=\"rSelectRooms\">\r\n              <div className=\"room\">\r\n                <span>Số lượng: </span>\r\n                <button onClick={() => handleQuantityChange(item._id, -1)}>\r\n                  -\r\n                </button>\r\n                <span>{selectedRooms[item._id] || 0}</span>\r\n                <button onClick={() => handleQuantityChange(item._id, 1)}>\r\n                  +\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <button onClick={handleClick} className=\"rButton\">\r\n          Đặt ngay!\r\n        </button>\r\n        {showMessage && (\r\n          <p className=\"errorMessage\" style={{ color: \"red\" }}>\r\n            Vui lòng chọn ít nhất một phòng trước khi tiếp tục.\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reserve;\r\n","E:\\ReactProject\\web-travel-be\\client\\src\\pages\\register\\Register.jsx",["147"],[],"import { useContext, useState } from \"react\";\r\nimport \"./register.css\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"./../../components/navbar/Navbar\";\r\n\r\nconst Register = () => {\r\n  const [credentials, setCredentials] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false); // State for password visibility\r\n  const [passwordMatchError, setPasswordMatchError] = useState(false); // State for password match error\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // State for custom error message\r\n\r\n  const { loading, error, register } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setCredentials((prev) => ({ ...prev, [e.target.id]: e.target.value }));\r\n  };\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword(!showPassword); // Toggle password visibility\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check if passwords match\r\n    if (credentials.password !== credentials.confirmPassword) {\r\n      setPasswordMatchError(true);\r\n      return;\r\n    }\r\n\r\n    const res = await register(credentials);\r\n    if (res) {\r\n      navigate(\"/login\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"register-page\">\r\n        <div className=\"register\">\r\n          <form onSubmit={handleSubmit} className=\"rContainer\">\r\n            <div className=\"rHeader\">Đăng ký</div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Tên tài khoản\"\r\n              id=\"username\"\r\n              onChange={handleChange}\r\n              className=\"rInput\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              id=\"email\"\r\n              onChange={handleChange}\r\n              className=\"rInput\"\r\n              required\r\n            />\r\n            <input\r\n              type={showPassword ? \"text\" : \"password\"} // Toggle input type\r\n              placeholder=\"Mật khẩu\"\r\n              id=\"password\"\r\n              onChange={handleChange}\r\n              className=\"rInput\"\r\n              required\r\n            />\r\n            <input\r\n              type={showPassword ? \"text\" : \"password\"} // Toggle input type\r\n              placeholder=\"Nhập lại mật khẩu\"\r\n              id=\"confirmPassword\"\r\n              onChange={handleChange}\r\n              className=\"rInput\"\r\n              required\r\n            />\r\n            <div className=\"show-password-container\">\r\n              <input\r\n                style={{ height: \"20px\" }}\r\n                type=\"checkbox\"\r\n                id=\"showPassword\"\r\n                checked={showPassword} // Set checkbox state\r\n                onChange={handleShowPassword}\r\n              />\r\n              <label htmlFor=\"showPassword\">Hiển thị mật khẩu</label>\r\n            </div>\r\n            {passwordMatchError && (\r\n              <span\r\n                style={{ textAlign: \"center\", color: \"red\" }}\r\n                className=\"err-message\"\r\n              >\r\n                Mật khẩu không khớp.\r\n              </span>\r\n            )}\r\n            {error && (\r\n              <span\r\n                className=\"error-message\"\r\n                onClick={() => setErrorMessage(error.message)}\r\n                style={{ textAlign: \"center\", color: \"red\" }}\r\n              >\r\n                Tài khoản hoặc Email đã tồn tại!\r\n              </span>\r\n            )}\r\n            <button disabled={loading} className=\"rButton\" type=\"submit\">\r\n              Đăng ký\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","E:\\ReactProject\\web-travel-be\\client\\src\\components\\review\\Review.jsx",["148"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\r\nimport \"./review.css\";\r\nimport { useLocation, useParams } from \"react-router-dom\";\r\n\r\nconst Review = ({ isAuthenticated }) => {\r\n  const location = useLocation();\r\n  const hotelId = location.pathname.split(\"/\")[2];\r\n  const [feedback, setFeedback] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [star, setStar] = useState(1);\r\n  const [reviews, setReviews] = useState([]);\r\n  const [error, setError] = useState(\"\");\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [reviewsPerPage] = useState(9);\r\n\r\n  useEffect(() => {\r\n    const fetchReviews = async () => {\r\n      try {\r\n        const response = await axios.get(`/reviews/hotel/${hotelId}`);\r\n        setReviews(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching reviews:\", error);\r\n      }\r\n    };\r\n    fetchReviews();\r\n  }, [hotelId]);\r\n\r\n  const fetchReviews = async () => {\r\n    try {\r\n      const response = await axios.get(`/reviews/hotel/${hotelId}`);\r\n      setReviews(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching reviews:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    if (!feedback || !username || !email) {\r\n      setError(\"Vui lòng điền đầy đủ thông tin\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(`/reviews/hotel/${hotelId}`, {\r\n        feedback,\r\n        username,\r\n        email,\r\n        star,\r\n      });\r\n      console.log(\"Review submitted:\", response.data);\r\n      setFeedback(\"\");\r\n      setUsername(\"\");\r\n      setEmail(\"\");\r\n      setStar(1);\r\n      setError(\"\");\r\n      fetchReviews(); // Refresh reviews after submitting a new one\r\n    } catch (error) {\r\n      console.error(\"Error submitting review:\", error);\r\n    }\r\n  };\r\n\r\n  // Get current reviews\r\n  const indexOfLastReview = currentPage * reviewsPerPage;\r\n  const indexOfFirstReview = indexOfLastReview - reviewsPerPage;\r\n  const currentReviews = reviews.slice(indexOfFirstReview, indexOfLastReview);\r\n\r\n  // Change page\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  // Calculate page numbers\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(reviews.length / reviewsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n\r\n  return (\r\n    <div className=\"review\">\r\n      <div className=\"titleReview\">\r\n        <h2>Đánh giá khách hàng</h2>\r\n      </div>\r\n      <div className=\"containerReviews\">\r\n        {currentReviews.map((review, index) => (\r\n          <div className=\"cardReview\" key={index}>\r\n            <div className=\"boxReview\">\r\n              <div className=\"revCustomer\">\r\n                <h4 className=\"cusName\">{review.username}</h4>\r\n                <span className=\"ratingNumber\">\r\n                  {review.star}/5 <FontAwesomeIcon icon={faStar} />\r\n                </span>\r\n              </div>\r\n              <div className=\"descReview\">{review.feedback}</div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {pageNumbers.length > 1 && (\r\n        <ul className=\"pagination\">\r\n          <li>\r\n            <button\r\n              onClick={() =>\r\n                setCurrentPage((prevPage) =>\r\n                  prevPage === 1 ? prevPage : prevPage - 1\r\n                )\r\n              }\r\n              disabled={currentPage === 1}\r\n            >\r\n              Prev\r\n            </button>\r\n          </li>\r\n          {pageNumbers.map((number) => (\r\n            <li key={number}>\r\n              <button\r\n                onClick={() => paginate(number)}\r\n                className={currentPage === number ? \"active\" : \"\"}\r\n              >\r\n                {number}\r\n              </button>\r\n            </li>\r\n          ))}\r\n          <li>\r\n            <button\r\n              onClick={() =>\r\n                setCurrentPage((prevPage) =>\r\n                  prevPage === pageNumbers.length ? prevPage : prevPage + 1\r\n                )\r\n              }\r\n              disabled={currentPage === pageNumbers.length}\r\n            >\r\n              Next\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      )}\r\n      <div className=\"writeReview\">\r\n        <h3 style={{ marginBottom: \"20px\", color: \"#0871c2\" }}>\r\n          Write a review\r\n        </h3>\r\n        <div className=\"containerComment\">\r\n          <div className=\"feedback\">\r\n            <label>Feedback</label>\r\n            <textarea\r\n              id=\"feedback\"\r\n              className=\"inputFeedback\"\r\n              placeholder=\"Viết đánh giá tại đây...\"\r\n              value={feedback}\r\n              onChange={(e) => setFeedback(e.target.value)}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"inputInfo\">\r\n            <div className=\"infInput\">\r\n              <label htmlFor=\"\">Họ tên</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"inputText\"\r\n                placeholder=\"Họ và tên\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"infInput\">\r\n              <label htmlFor=\"\">Email</label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"inputText\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n            </div>\r\n            <div className=\"infInput\">\r\n              <label className=\"optionRating\" htmlFor=\"\">\r\n                Đánh giá (\r\n                <span className=\"ratingNumber\">\r\n                  0-5 <FontAwesomeIcon icon={faStar} />\r\n                </span>\r\n                )\r\n              </label>\r\n              <select\r\n                id=\"rating\"\r\n                className=\"inputRating\"\r\n                value={star}\r\n                onChange={(e) => setStar(parseInt(e.target.value))}\r\n              >\r\n                <option value=\"1\">1</option>\r\n                <option value=\"2\">2</option>\r\n                <option value=\"3\">3</option>\r\n                <option value=\"4\">4</option>\r\n                <option value=\"5\">5</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {error && (\r\n          <div style={{ color: \"red\", margin: \"10px auto\" }}>{error}</div>\r\n        )}\r\n        <div className=\"buttonHandle\">\r\n          <button type=\"button\" className=\"submit\" onClick={handleSubmit}>\r\n            Xác nhận\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Review;\r\n","E:\\ReactProject\\web-travel-be\\client\\src\\pages\\information\\Information.jsx",["149","150"],[],"import React, { useState } from \"react\";\r\nimport \"./information.css\";\r\nimport Header from \"../../components/header/Header\";\r\nimport MailList from \"../../components/mailList/MailList\";\r\nimport Footer from \"../../components/footer/Footer\";\r\nimport Navbar from \"./../../components/navbar/Navbar\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Information = () => {\r\n  const [fullName, setFullName] = useState(\"\"); // State to store full name\r\n  const [email, setEmail] = useState(\"\"); // State to store email\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\"); // State to store phone number\r\n  const [errorMessage, setErrorMessage] = useState(\"\"); // State to store error message\r\n\r\n  const handleEmailValidation = () => {\r\n    // Simple email validation using regex\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const handleButtonClick = () => {\r\n    // Check if all fields are filled\r\n    if (\r\n      fullName.trim() === \"\" ||\r\n      email.trim() === \"\" ||\r\n      phoneNumber.trim() === \"\"\r\n    ) {\r\n      setErrorMessage(\"Vui lòng điền đầy đủ thông tin!\");\r\n      return;\r\n    }\r\n    // Check if email is valid\r\n    if (!handleEmailValidation()) {\r\n      setErrorMessage(\"Email không hợp lệ. Vui lòng kiểm tra lại!\");\r\n      return;\r\n    }\r\n    // Check if phoneNumber is numeric\r\n    if (!/^\\d+$/.test(phoneNumber)) {\r\n      setErrorMessage(\"Số điện thoại phải là số!\");\r\n      return;\r\n    }\r\n    // If all validations pass, navigate to \"/checkout\"\r\n    window.location.href = \"/checkout\";\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"Information\">\r\n        <h2>Nhập thông tin</h2>\r\n        <div className=\"inputContainer\">\r\n          <label htmlFor=\"fullName\">Họ và tên:</label>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Họ tên\"\r\n            id=\"fullName\"\r\n            name=\"fullName\"\r\n            value={fullName}\r\n            onChange={(e) => setFullName(e.target.value)} // Update fullName state on change\r\n          />\r\n        </div>\r\n        <div className=\"inputContainer\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)} // Update email state on change\r\n          />\r\n        </div>\r\n        <div className=\"inputContainer\">\r\n          <label htmlFor=\"phoneNumber\">Số điện thoại:</label>\r\n          <input\r\n            type=\"tel\"\r\n            placeholder=\"SDT\"\r\n            id=\"phoneNumber\"\r\n            name=\"phoneNumber\"\r\n            value={phoneNumber}\r\n            onChange={(e) => setPhoneNumber(e.target.value)} // Update phoneNumber state on change\r\n          />\r\n        </div>\r\n        {errorMessage && <p className=\"reminder\">{errorMessage}</p>}\r\n        <button className=\"submitButton\" onClick={handleButtonClick}>\r\n          Xác nhận thông tin\r\n        </button>\r\n      </div>\r\n      <MailList />\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Information;\r\n","E:\\ReactProject\\web-travel-be\\client\\src\\pages\\checkout\\Checkout.jsx",[],[],"E:\\ReactProject\\web-travel-be\\client\\src\\components\\errorboundary\\ErrorBoundary.js",[],[],{"ruleId":"151","severity":1,"message":"152","line":23,"column":26,"nodeType":"153","messageId":"154","endLine":23,"endColumn":31},{"ruleId":"151","severity":1,"message":"155","line":14,"column":10,"nodeType":"153","messageId":"154","endLine":14,"endColumn":14},{"ruleId":"151","severity":1,"message":"152","line":34,"column":10,"nodeType":"153","messageId":"154","endLine":34,"endColumn":15},{"ruleId":"151","severity":1,"message":"156","line":7,"column":17,"nodeType":"153","messageId":"154","endLine":7,"endColumn":25},{"ruleId":"151","severity":1,"message":"152","line":5,"column":26,"nodeType":"153","messageId":"154","endLine":5,"endColumn":31},{"ruleId":"151","severity":1,"message":"157","line":4,"column":3,"nodeType":"153","messageId":"154","endLine":4,"endColumn":8},{"ruleId":"151","severity":1,"message":"158","line":7,"column":3,"nodeType":"153","messageId":"154","endLine":7,"endColumn":10},{"ruleId":"151","severity":1,"message":"159","line":8,"column":3,"nodeType":"153","messageId":"154","endLine":8,"endColumn":9},{"ruleId":"151","severity":1,"message":"160","line":41,"column":11,"nodeType":"153","messageId":"154","endLine":41,"endColumn":15},{"ruleId":"151","severity":1,"message":"152","line":5,"column":26,"nodeType":"153","messageId":"154","endLine":5,"endColumn":31},{"ruleId":"151","severity":1,"message":"152","line":5,"column":26,"nodeType":"153","messageId":"154","endLine":5,"endColumn":31},{"ruleId":"151","severity":1,"message":"161","line":4,"column":8,"nodeType":"153","messageId":"154","endLine":4,"endColumn":13},{"ruleId":"151","severity":1,"message":"156","line":15,"column":27,"nodeType":"153","messageId":"154","endLine":15,"endColumn":35},{"ruleId":"151","severity":1,"message":"162","line":1,"column":27,"nodeType":"153","messageId":"154","endLine":1,"endColumn":36},{"ruleId":"151","severity":1,"message":"163","line":13,"column":17,"nodeType":"153","messageId":"154","endLine":13,"endColumn":24},{"ruleId":"151","severity":1,"message":"152","line":13,"column":26,"nodeType":"153","messageId":"154","endLine":13,"endColumn":31},{"ruleId":"151","severity":1,"message":"164","line":35,"column":9,"nodeType":"153","messageId":"154","endLine":35,"endColumn":20},{"ruleId":"151","severity":1,"message":"165","line":43,"column":9,"nodeType":"153","messageId":"154","endLine":43,"endColumn":21},{"ruleId":"151","severity":1,"message":"166","line":16,"column":10,"nodeType":"153","messageId":"154","endLine":16,"endColumn":22},{"ruleId":"151","severity":1,"message":"167","line":6,"column":23,"nodeType":"153","messageId":"154","endLine":6,"endColumn":32},{"ruleId":"151","severity":1,"message":"168","line":3,"column":8,"nodeType":"153","messageId":"154","endLine":3,"endColumn":14},{"ruleId":"151","severity":1,"message":"155","line":7,"column":10,"nodeType":"153","messageId":"154","endLine":7,"endColumn":14},"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","'Link' is defined but never used.","'dispatch' is assigned a value but never used.","'faCar' is defined but never used.","'faPlane' is defined but never used.","'faTaxi' is defined but never used.","'user' is assigned a value but never used.","'axios' is defined but never used.","'useEffect' is defined but never used.","'loading' is assigned a value but never used.","'isAvailable' is assigned a value but never used.","'handleSelect' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'useParams' is defined but never used.","'Header' is defined but never used."]