{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactProject\\\\web-travel-be\\\\client\\\\src\\\\components\\\\reserve\\\\Reserve.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./reserve.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\nimport useFetch from \"../../hooks/useFetch\";\nimport { useContext } from \"react\";\nimport { SearchContext } from \"../../context/SearchContext\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = _ref => {\n  _s();\n\n  let {\n    setOpen,\n    hotelId\n  } = _ref;\n  const [selectedRooms, setSelectedRooms] = useState({});\n  const {\n    data,\n    loading,\n    error\n  } = useFetch(`/hotels/room/${hotelId}`);\n  const {\n    dates\n  } = useContext(SearchContext);\n  const [showMessage, setShowMessage] = useState(false);\n\n  const getDatesInRange = (startDate, endDate) => {\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    const date = new Date(start.getTime());\n    const dates = [];\n\n    while (date <= end) {\n      dates.push(new Date(date).getTime());\n      date.setDate(date.getDate() + 1);\n    }\n\n    return dates;\n  };\n\n  const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\n\n  const isAvailable = roomNumber => {\n    const isFound = roomNumber.unavailableDates.some(date => alldates.includes(new Date(date).getTime()));\n    return !isFound;\n  };\n\n  const handleSelect = (e, roomId) => {\n    const checked = e.target.checked;\n    setSelectedRooms(prevSelectedRooms => ({ ...prevSelectedRooms,\n      [roomId]: checked ? 1 : 0\n    }));\n  };\n\n  const handleQuantityChange = (roomId, change) => {\n    setSelectedRooms(prevSelectedRooms => ({ ...prevSelectedRooms,\n      [roomId]: Math.max((prevSelectedRooms[roomId] || 0) + change, 0)\n    }));\n  };\n\n  const navigate = useNavigate();\n\n  const handleClick = async () => {\n    const selectedRoomIds = Object.keys(selectedRooms).filter(roomId => selectedRooms[roomId] > 0);\n\n    if (selectedRoomIds.length > 0) {\n      try {\n        await Promise.all(selectedRoomIds.map(roomId => {\n          const res = axios.put(`/rooms/availability/${roomId}`, {\n            dates: alldates\n          });\n          return res.data;\n        }));\n        setOpen(false);\n        navigate(\"/information\");\n      } catch (err) {}\n    } else {\n      setShowMessage(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reserve\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rContainer\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faCircleXmark,\n        className: \"rClose\",\n        onClick: () => setOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Ch\\u1ECDn lo\\u1EA1i ph\\xF2ng:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), data.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rItem\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rItemInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rTitle\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rDesc\",\n            children: item.desc\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rMax\",\n            children: [\"S\\u1ED1 ng\\u01B0\\u1EDDi t\\u1ED1i \\u0111a: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: item.maxPeople\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rPrice\",\n            children: item.price\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rSelectRooms\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"room\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"S\\u1ED1 l\\u01B0\\u1EE3ng: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleQuantityChange(item._id, -1),\n              children: \"-\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: selectedRooms[item._id] || 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleQuantityChange(item._id, 1),\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, item._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        className: \"rButton\",\n        children: \"\\u0110\\u1EB7t ngay!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), showMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"errorMessage\",\n        style: {\n          color: \"red\"\n        },\n        children: \"Vui l\\xF2ng ch\\u1ECDn \\xEDt nh\\u1EA5t m\\u1ED9t ph\\xF2ng tr\\u01B0\\u1EDBc khi ti\\u1EBFp t\\u1EE5c.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Reserve, \"uVcg95nQO7MTP4RlEYmIzyzNMpI=\", false, function () {\n  return [useFetch, useNavigate];\n});\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["E:/ReactProject/web-travel-be/client/src/components/reserve/Reserve.jsx"],"names":["React","useState","useEffect","FontAwesomeIcon","faCircleXmark","useFetch","useContext","SearchContext","axios","useNavigate","Reserve","setOpen","hotelId","selectedRooms","setSelectedRooms","data","loading","error","dates","showMessage","setShowMessage","getDatesInRange","startDate","endDate","start","Date","end","date","getTime","push","setDate","getDate","alldates","isAvailable","roomNumber","isFound","unavailableDates","some","includes","handleSelect","e","roomId","checked","target","prevSelectedRooms","handleQuantityChange","change","Math","max","navigate","handleClick","selectedRoomIds","Object","keys","filter","length","Promise","all","map","res","put","err","item","title","desc","maxPeople","price","_id","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./reserve.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCircleXmark } from \"@fortawesome/free-solid-svg-icons\";\r\nimport useFetch from \"../../hooks/useFetch\";\r\nimport { useContext } from \"react\";\r\nimport { SearchContext } from \"../../context/SearchContext\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Reserve = ({ setOpen, hotelId }) => {\r\n  const [selectedRooms, setSelectedRooms] = useState({});\r\n  const { data, loading, error } = useFetch(`/hotels/room/${hotelId}`);\r\n  const { dates } = useContext(SearchContext);\r\n  const [showMessage, setShowMessage] = useState(false);\r\n\r\n  const getDatesInRange = (startDate, endDate) => {\r\n    const start = new Date(startDate);\r\n    const end = new Date(endDate);\r\n\r\n    const date = new Date(start.getTime());\r\n\r\n    const dates = [];\r\n\r\n    while (date <= end) {\r\n      dates.push(new Date(date).getTime());\r\n      date.setDate(date.getDate() + 1);\r\n    }\r\n\r\n    return dates;\r\n  };\r\n\r\n  const alldates = getDatesInRange(dates[0].startDate, dates[0].endDate);\r\n\r\n  const isAvailable = (roomNumber) => {\r\n    const isFound = roomNumber.unavailableDates.some((date) =>\r\n      alldates.includes(new Date(date).getTime())\r\n    );\r\n\r\n    return !isFound;\r\n  };\r\n\r\n  const handleSelect = (e, roomId) => {\r\n    const checked = e.target.checked;\r\n    setSelectedRooms((prevSelectedRooms) => ({\r\n      ...prevSelectedRooms,\r\n      [roomId]: checked ? 1 : 0,\r\n    }));\r\n  };\r\n\r\n  const handleQuantityChange = (roomId, change) => {\r\n    setSelectedRooms((prevSelectedRooms) => ({\r\n      ...prevSelectedRooms,\r\n      [roomId]: Math.max((prevSelectedRooms[roomId] || 0) + change, 0),\r\n    }));\r\n  };\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = async () => {\r\n    const selectedRoomIds = Object.keys(selectedRooms).filter(\r\n      (roomId) => selectedRooms[roomId] > 0\r\n    );\r\n\r\n    if (selectedRoomIds.length > 0) {\r\n      try {\r\n        await Promise.all(\r\n          selectedRoomIds.map((roomId) => {\r\n            const res = axios.put(`/rooms/availability/${roomId}`, {\r\n              dates: alldates,\r\n            });\r\n            return res.data;\r\n          })\r\n        );\r\n        setOpen(false);\r\n        navigate(\"/information\");\r\n      } catch (err) {}\r\n    } else {\r\n      setShowMessage(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reserve\">\r\n      <div className=\"rContainer\">\r\n        <FontAwesomeIcon\r\n          icon={faCircleXmark}\r\n          className=\"rClose\"\r\n          onClick={() => setOpen(false)}\r\n        />\r\n        <span>Chọn loại phòng:</span>\r\n        {data.map((item) => (\r\n          <div className=\"rItem\" key={item._id}>\r\n            <div className=\"rItemInfo\">\r\n              <div className=\"rTitle\">{item.title}</div>\r\n              <div className=\"rDesc\">{item.desc}</div>\r\n              <div className=\"rMax\">\r\n                Số người tối đa: <b>{item.maxPeople}</b>\r\n              </div>\r\n              <div className=\"rPrice\">{item.price}</div>\r\n            </div>\r\n            <div className=\"rSelectRooms\">\r\n              <div className=\"room\">\r\n                <span>Số lượng: </span>\r\n                <button onClick={() => handleQuantityChange(item._id, -1)}>\r\n                  -\r\n                </button>\r\n                <span>{selectedRooms[item._id] || 0}</span>\r\n                <button onClick={() => handleQuantityChange(item._id, 1)}>\r\n                  +\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        <button onClick={handleClick} className=\"rButton\">\r\n          Đặt ngay!\r\n        </button>\r\n        {showMessage && (\r\n          <p className=\"errorMessage\" style={{ color: \"red\" }}>\r\n            Vui lòng chọn ít nhất một phòng trước khi tiếp tục.\r\n          </p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reserve;\r\n"]},"metadata":{},"sourceType":"module"}