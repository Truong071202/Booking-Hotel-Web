{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactProject\\\\web-travel-be\\\\client\\\\src\\\\pages\\\\register\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport { useContext, useState } from \"react\";\nimport \"./register.css\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport { useNavigate } from \"react-router-dom\";\nimport Navbar from \"./../../components/navbar/Navbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [credentials, setCredentials] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n  const [showPassword, setShowPassword] = useState(false); // State for password visibility\n\n  const {\n    loading,\n    error,\n    register\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n\n  const handleChange = e => {\n    setCredentials(prev => ({ ...prev,\n      [e.target.id]: e.target.value\n    }));\n  };\n\n  const handleShowPassword = () => {\n    setShowPassword(!showPassword); // Toggle password visibility\n  };\n\n  const handleClick = async e => {\n    e.preventDefault();\n    const res = await register(credentials);\n\n    if (res) {\n      navigate(\"/login\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"register-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"rContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rHeader\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Username\",\n            id: \"username\",\n            onChange: handleChange,\n            className: \"rInput\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: \"Email\",\n            id: \"email\",\n            onChange: handleChange,\n            className: \"rInput\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? \"text\" : \"password\" // Toggle input type\n            ,\n            placeholder: \"Password\",\n            id: \"password\",\n            onChange: handleChange,\n            className: \"rInput\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: showPassword ? \"text\" : \"password\" // Toggle input type\n            ,\n            placeholder: \"Confirm Password\",\n            id: \"confirmPassword\",\n            onChange: handleChange,\n            className: \"rInput\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"show-password-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              style: {\n                height: \"20px\"\n              },\n              type: \"checkbox\",\n              id: \"showPassword\",\n              checked: showPassword // Set checkbox state\n              ,\n              onChange: handleShowPassword\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"showPassword\",\n              children: \"Show Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: loading,\n            onClick: handleClick,\n            className: \"rButton\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error-message\",\n          children: error.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Register, \"7xuK+fCUVv2ADvYuwKkFSvNfqX8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["E:/ReactProject/web-travel-be/client/src/pages/register/Register.jsx"],"names":["useContext","useState","AuthContext","useNavigate","Navbar","Register","credentials","setCredentials","username","email","password","confirmPassword","showPassword","setShowPassword","loading","error","register","navigate","handleChange","e","prev","target","id","value","handleShowPassword","handleClick","preventDefault","res","height","message"],"mappings":"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","sourcesContent":["import { useContext, useState } from \"react\";\r\nimport \"./register.css\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Navbar from \"./../../components/navbar/Navbar\";\r\n\r\nconst Register = () => {\r\n  const [credentials, setCredentials] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n  const [showPassword, setShowPassword] = useState(false); // State for password visibility\r\n\r\n  const { loading, error, register } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    setCredentials((prev) => ({ ...prev, [e.target.id]: e.target.value }));\r\n  };\r\n\r\n  const handleShowPassword = () => {\r\n    setShowPassword(!showPassword); // Toggle password visibility\r\n  };\r\n\r\n  const handleClick = async (e) => {\r\n    e.preventDefault();\r\n    const res = await register(credentials);\r\n    if (res) {\r\n      navigate(\"/login\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"register-page\">\r\n        <div className=\"register\">\r\n          <div className=\"rContainer\">\r\n            <div className=\"rHeader\">Register</div>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Username\"\r\n              id=\"username\"\r\n              onChange={handleChange}\r\n              className=\"rInput\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"email\"\r\n              placeholder=\"Email\"\r\n              id=\"email\"\r\n              onChange={handleChange}\r\n              className=\"rInput\"\r\n              required\r\n            />\r\n            <input\r\n              type={showPassword ? \"text\" : \"password\"} // Toggle input type\r\n              placeholder=\"Password\"\r\n              id=\"password\"\r\n              onChange={handleChange}\r\n              className=\"rInput\"\r\n              required\r\n            />\r\n            <input\r\n              type={showPassword ? \"text\" : \"password\"} // Toggle input type\r\n              placeholder=\"Confirm Password\"\r\n              id=\"confirmPassword\"\r\n              onChange={handleChange}\r\n              className=\"rInput\"\r\n              required\r\n            />\r\n            <div className=\"show-password-container\">\r\n              <input\r\n                style={{ height: \"20px\" }}\r\n                type=\"checkbox\"\r\n                id=\"showPassword\"\r\n                checked={showPassword} // Set checkbox state\r\n                onChange={handleShowPassword}\r\n              />\r\n              <label htmlFor=\"showPassword\">Show Password</label>\r\n            </div>\r\n            <button\r\n              disabled={loading}\r\n              onClick={handleClick}\r\n              className=\"rButton\"\r\n            >\r\n              Register\r\n            </button>\r\n          </div>\r\n          {error && <span className=\"error-message\">{error.message}</span>}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"]},"metadata":{},"sourceType":"module"}